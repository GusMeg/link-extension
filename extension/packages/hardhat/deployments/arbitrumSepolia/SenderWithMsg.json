{
  "address": "0x75036f2Bb3208DAD7a465657c0094d7827Ad1909",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "text",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "MessageSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "TokensTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "text",
          "type": "string"
        }
      ],
      "name": "sendMessage",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_destinationChain",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferToken2AnyChain",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc858bd0af8320fd6c85c6dcdb8c8b1c1179001153c678c315e33bede25c6d004",
  "receipt": {
    "to": null,
    "from": "0x0044fEbBf3dDF4204A644A92827635D6199966f8",
    "contractAddress": "0x75036f2Bb3208DAD7a465657c0094d7827Ad1909",
    "transactionIndex": 1,
    "gasUsed": "766075",
    "logsBloom": "0x
    "blockHash": "0xbdc4ac43984710cf7aa80aa2cc9c33d6416931a11da6a705787d541cfb533f8d",
    "transactionHash": "0xc858bd0af8320fd6c85c6dcdb8c8b1c1179001153c678c315e33bede25c6d004",
    "logs": [],
    "blockNumber": 76630856,
    "cumulativeGasUsed": "766075",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2a9C5afB0d0e4BAb2BCdaE109EC4b0c4Be15a165",
    "0xb1D4538B4571d411F07960EF2838Ce337FE1E80E"
  ],
  "numDeployments": 2,
  "solcInputHash": "45b254e63d9d5ed13ffe639cde2643c8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"TokensTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_destinationChain\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken2AnyChain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SenderWithMsg.sol\":\"SenderWithMsg\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\ninterface IRouterClient {\\n  error UnsupportedDestinationChain(uint64 destChainSelector);\\n  error InsufficientFeeTokenAmount();\\n  error InvalidMsgValue();\\n\\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\\n  /// @param chainSelector The chain to check.\\n  /// @return supported is true if it is supported, false if not.\\n  function isChainSupported(uint64 chainSelector) external view returns (bool supported);\\n\\n  /// @notice Gets a list of all supported tokens which can be sent or received\\n  /// to/from a given chain id.\\n  /// @param chainSelector The chainSelector.\\n  /// @return tokens The addresses of all tokens that are supported.\\n  function getSupportedTokens(uint64 chainSelector) external view returns (address[] memory tokens);\\n\\n  /// @param destinationChainSelector The destination chainSelector\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return fee returns execution fee for the message\\n  /// delivery to destination chain, denominated in the feeToken specified in the message.\\n  /// @dev Reverts with appropriate reason upon invalid message.\\n  function getFee(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage memory message\\n  ) external view returns (uint256 fee);\\n\\n  /// @notice Request a message to be sent to the destination chain\\n  /// @param destinationChainSelector The destination chain ID\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return messageId The message ID\\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\\n  /// the overpayment with no refund.\\n  /// @dev Reverts with appropriate reason upon invalid message.\\n  function ccipSend(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage calldata message\\n  ) external payable returns (bytes32);\\n}\\n\",\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  /// @dev RMN depends on this struct, if changing, please notify the RMN maintainers.\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit;\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"license\":\"MIT\"},\"contracts/SenderWithMsg.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport {IRouterClient} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\\\";\\r\\nimport {Client} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\\\";\\r\\nimport {IERC20} from \\\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ncontract SenderWithMsg {\\r\\n  \\r\\n    // Event emitted when a message is sent to another chain.\\r\\n    event MessageSent(\\r\\n        bytes32 indexed messageId, // The unique ID of the CCIP message.\\r\\n        uint64 indexed destinationChainSelector, // The chain selector of the destination chain.\\r\\n        address receiver, // The address of the receiver on the destination chain.\\r\\n        string text, // The text being sent.\\r\\n        uint256 fees // The fees paid for sending the CCIP message.\\r\\n    );\\r\\n\\r\\n    event TokensTransferred(\\r\\n        bytes32 indexed messageId, // The unique ID of the message.\\r\\n        uint64 indexed destinationChainSelector, // The chain selector of the destination chain.\\r\\n        address receiver, // The address of the receiver on the destination chain.\\r\\n        uint256 fees // The fees paid for sending the message.\\r\\n    );\\r\\n\\r\\n    IRouterClient private router;\\r\\n    IERC20 private linkToken;\\r\\n\\r\\n    constructor(address _router, address _link) {\\r\\n        router = IRouterClient(_router);\\r\\n        linkToken = IERC20(_link);\\r\\n    }\\r\\n   \\r\\n    function transferToken2AnyChain(\\r\\n        uint64 _destinationChain,\\r\\n        address _token,\\r\\n        address _receiver,\\r\\n        uint256 _amount\\r\\n    )\\r\\n        external\\r\\n        returns (bytes32 messageId)\\r\\n    {\\r\\n        //Initialize variables\\r\\n        IERC20 token = IERC20(_token);\\r\\n\\r\\n        Client.EVMTokenAmount[]\\r\\n            memory tokenAmounts = new Client.EVMTokenAmount[](1);\\r\\n        Client.EVMTokenAmount memory tokenAmount = Client.EVMTokenAmount({\\r\\n            token: _token,\\r\\n            amount: _amount\\r\\n        });\\r\\n        tokenAmounts[0] = tokenAmount;\\r\\n\\r\\n        // Build the CCIP Message\\r\\n        Client.EVM2AnyMessage memory message = Client.EVM2AnyMessage({\\r\\n            receiver: abi.encode(_receiver),\\r\\n            data: \\\"\\\",\\r\\n            tokenAmounts: tokenAmounts,\\r\\n            extraArgs: Client._argsToBytes(\\r\\n                Client.EVMExtraArgsV1({gasLimit: 0})\\r\\n            ),\\r\\n            feeToken: address(linkToken)\\r\\n        });\\r\\n       \\r\\n        // CCIP Fees Management\\r\\n        uint256 fees = router.getFee(_destinationChain, message);\\r\\n\\r\\n        // Transfer tokens from user this contract\\r\\n        require(linkToken.transferFrom(msg.sender, address(this), fees), \\\"Couldnt transfer Link\\\");\\r\\n        require(token.transferFrom(msg.sender, address(this), _amount), \\\"Couldnt transfer token\\\");\\r\\n        \\r\\n        // Approve Router to spend tokens we send\\r\\n        linkToken.approve(address(router), fees);\\r\\n        IERC20(_token).approve(address(router), _amount);\\r\\n       \\r\\n        // Send CCIP Message\\r\\n        messageId = router.ccipSend(_destinationChain, message);\\r\\n       \\r\\n        emit TokensTransferred(\\r\\n            messageId,\\r\\n            _destinationChain,\\r\\n            _receiver,\\r\\n            fees\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function sendMessage(\\r\\n        uint64 destinationChainSelector,\\r\\n        address receiver,\\r\\n        string calldata text\\r\\n    ) external returns (bytes32 messageId) {\\r\\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\\r\\n        Client.EVM2AnyMessage memory evm2AnyMessage = Client.EVM2AnyMessage({\\r\\n            receiver: abi.encode(receiver), // ABI-encoded receiver address\\r\\n            data: abi.encode(text), // ABI-encoded string\\r\\n            tokenAmounts: new Client.EVMTokenAmount[](0), // Empty array indicating no tokens are being sent\\r\\n            extraArgs: Client._argsToBytes(\\r\\n                // Additional arguments, setting gas limit\\r\\n                Client.EVMExtraArgsV1({gasLimit: 200_000})\\r\\n            ),\\r\\n            // Set the feeToken  address, indicating LINK will be used for fees\\r\\n            feeToken: address(linkToken)\\r\\n        });\\r\\n\\r\\n        // Get the fee required to send the message\\r\\n        uint256 fees = router.getFee(\\r\\n            destinationChainSelector,\\r\\n            evm2AnyMessage\\r\\n        );\\r\\n\\r\\n        // Transfer tokens from user this contract\\r\\n        require(linkToken.transferFrom(msg.sender, address(this), fees), \\\"Couldnt transfer Link\\\");\\r\\n        \\r\\n        // Approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\\r\\n        linkToken.approve(address(router), fees);\\r\\n\\r\\n        // Send the message through the router and store the returned message ID\\r\\n        messageId = router.ccipSend(destinationChainSelector, evm2AnyMessage);\\r\\n\\r\\n        // Emit an event with message details\\r\\n        emit MessageSent(\\r\\n            messageId,\\r\\n            destinationChainSelector,\\r\\n            receiver,\\r\\n            text,\\r\\n            fees\\r\\n        );\\r\\n\\r\\n        // Return the message ID\\r\\n        return messageId;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x1a868a46fee7c04ec8e45d8302cc4f67818871a081f64018fe34d9eee19535eb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610cc0380380610cc083398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610c02806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630eb5ad451461003b5780634d0a6e3914610060575b600080fd5b61004e610049366004610900565b610073565b60405190815260200160405180910390f35b61004e61006e36600461098e565b6103d2565b6040805160a081019091526001600160a01b03841660c082015260009081908060e08101604051602081830303815290604052815260200185856040516020016100be929190610a02565b60408051601f198184030181529190528152602001600060405190808252806020026020018201604052801561011a57816020015b60408051808201909152600080825260208201528152602001906001900390816100f35790505b5081526001546001600160a01b031660208083019190915260408051918201815262030d4082529091019061014e9061088f565b9052600080546040516320487ded60e01b815292935090916001600160a01b03909116906320487ded90610188908a908690600401610a64565b602060405180830381865afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c99190610b3e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102459190610b57565b61028e5760405162461bcd60e51b8152602060048201526015602482015274436f756c646e74207472616e73666572204c696e6b60581b60448201526064015b60405180910390fd5b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156102e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103079190610b57565b506000546040516396f4e9f960e01b81526001600160a01b03909116906396f4e9f99061033a908a908690600401610a64565b6020604051808303816000875af1158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610b3e565b92508667ffffffffffffffff16837f72bf88fdd9d3b2023da1448d9689b4d63d2cffa089fd364b50e6077331986f7c888888866040516103c09493929190610b80565b60405180910390a35050949350505050565b60408051600180825281830190925260009185918391816020015b60408051808201909152600080825260208201528152602001906001900390816103ed57905050905060006040518060400160405280886001600160a01b03168152602001868152509050808260008151811061044c5761044c610bb6565b60209081029190910101526040805160a081019091526001600160a01b03871660c08201526000908060e0810160408051601f198184030181529181529082528051602081810183526000808352848201929092528383018890526001546001600160a01b03166060850152825190810190925281526080909101906104d19061088f565b9052600080546040516320487ded60e01b815292935090916001600160a01b03909116906320487ded9061050b908d908690600401610a64565b602060405180830381865afa158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c9190610b3e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190610b57565b61060c5760405162461bcd60e51b8152602060048201526015602482015274436f756c646e74207472616e73666572204c696e6b60581b6044820152606401610285565b6040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b038616906323b872dd906064016020604051808303816000875af115801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190610b57565b6106c85760405162461bcd60e51b815260206004820152601660248201527521b7bab632373a103a3930b739b332b9103a37b5b2b760511b6044820152606401610285565b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107419190610b57565b5060005460405163095ea7b360e01b81526001600160a01b03918216600482015260248101899052908a169063095ea7b3906044016020604051808303816000875af1158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610b57565b506000546040516396f4e9f960e01b81526001600160a01b03909116906396f4e9f9906107ec908d908690600401610a64565b6020604051808303816000875af115801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f9190610b3e565b604080516001600160a01b038b1681526020810184905291975067ffffffffffffffff8c169188917f1ffb7696630bf5f7fdb33fe60d736ea5bb173d88d6d9f68e1a9767ae9c9d7f59910160405180910390a35050505050949350505050565b60408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b803567ffffffffffffffff811681146108e457600080fd5b919050565b80356001600160a01b03811681146108e457600080fd5b6000806000806060858703121561091657600080fd5b61091f856108cc565b935061092d602086016108e9565b9250604085013567ffffffffffffffff8082111561094a57600080fd5b818701915087601f83011261095e57600080fd5b81358181111561096d57600080fd5b88602082850101111561097f57600080fd5b95989497505060200194505050565b600080600080608085870312156109a457600080fd5b6109ad856108cc565b93506109bb602086016108e9565b92506109c9604086016108e9565b9396929550929360600135925050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610a166020830184866109d9565b949350505050565b6000815180845260005b81811015610a4457602081850181015186830182015201610a28565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152610a9160e0860182610a1e565b905081860151603f1980878403016060880152610aae8383610a1e565b88860151888203830160808a01528051808352908601945060009350908501905b80841015610b0157845180516001600160a01b0316835286015186830152938501936001939093019290860190610acf565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550610b308187610a1e565b9a9950505050505050505050565b600060208284031215610b5057600080fd5b5051919050565b600060208284031215610b6957600080fd5b81518015158114610b7957600080fd5b9392505050565b6001600160a01b0385168152606060208201819052600090610ba590830185876109d9565b905082604083015295945050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220775efb93abc4c76bac76677f988d417a42f1d98f4736817071073415a8c0eee864736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630eb5ad451461003b5780634d0a6e3914610060575b600080fd5b61004e610049366004610900565b610073565b60405190815260200160405180910390f35b61004e61006e36600461098e565b6103d2565b6040805160a081019091526001600160a01b03841660c082015260009081908060e08101604051602081830303815290604052815260200185856040516020016100be929190610a02565b60408051601f198184030181529190528152602001600060405190808252806020026020018201604052801561011a57816020015b60408051808201909152600080825260208201528152602001906001900390816100f35790505b5081526001546001600160a01b031660208083019190915260408051918201815262030d4082529091019061014e9061088f565b9052600080546040516320487ded60e01b815292935090916001600160a01b03909116906320487ded90610188908a908690600401610a64565b602060405180830381865afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c99190610b3e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102459190610b57565b61028e5760405162461bcd60e51b8152602060048201526015602482015274436f756c646e74207472616e73666572204c696e6b60581b60448201526064015b60405180910390fd5b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156102e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103079190610b57565b506000546040516396f4e9f960e01b81526001600160a01b03909116906396f4e9f99061033a908a908690600401610a64565b6020604051808303816000875af1158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610b3e565b92508667ffffffffffffffff16837f72bf88fdd9d3b2023da1448d9689b4d63d2cffa089fd364b50e6077331986f7c888888866040516103c09493929190610b80565b60405180910390a35050949350505050565b60408051600180825281830190925260009185918391816020015b60408051808201909152600080825260208201528152602001906001900390816103ed57905050905060006040518060400160405280886001600160a01b03168152602001868152509050808260008151811061044c5761044c610bb6565b60209081029190910101526040805160a081019091526001600160a01b03871660c08201526000908060e0810160408051601f198184030181529181529082528051602081810183526000808352848201929092528383018890526001546001600160a01b03166060850152825190810190925281526080909101906104d19061088f565b9052600080546040516320487ded60e01b815292935090916001600160a01b03909116906320487ded9061050b908d908690600401610a64565b602060405180830381865afa158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c9190610b3e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190610b57565b61060c5760405162461bcd60e51b8152602060048201526015602482015274436f756c646e74207472616e73666572204c696e6b60581b6044820152606401610285565b6040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b038616906323b872dd906064016020604051808303816000875af115801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190610b57565b6106c85760405162461bcd60e51b815260206004820152601660248201527521b7bab632373a103a3930b739b332b9103a37b5b2b760511b6044820152606401610285565b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107419190610b57565b5060005460405163095ea7b360e01b81526001600160a01b03918216600482015260248101899052908a169063095ea7b3906044016020604051808303816000875af1158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610b57565b506000546040516396f4e9f960e01b81526001600160a01b03909116906396f4e9f9906107ec908d908690600401610a64565b6020604051808303816000875af115801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f9190610b3e565b604080516001600160a01b038b1681526020810184905291975067ffffffffffffffff8c169188917f1ffb7696630bf5f7fdb33fe60d736ea5bb173d88d6d9f68e1a9767ae9c9d7f59910160405180910390a35050505050949350505050565b60408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b803567ffffffffffffffff811681146108e457600080fd5b919050565b80356001600160a01b03811681146108e457600080fd5b6000806000806060858703121561091657600080fd5b61091f856108cc565b935061092d602086016108e9565b9250604085013567ffffffffffffffff8082111561094a57600080fd5b818701915087601f83011261095e57600080fd5b81358181111561096d57600080fd5b88602082850101111561097f57600080fd5b95989497505060200194505050565b600080600080608085870312156109a457600080fd5b6109ad856108cc565b93506109bb602086016108e9565b92506109c9604086016108e9565b9396929550929360600135925050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610a166020830184866109d9565b949350505050565b6000815180845260005b81811015610a4457602081850181015186830182015201610a28565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152610a9160e0860182610a1e565b905081860151603f1980878403016060880152610aae8383610a1e565b88860151888203830160808a01528051808352908601945060009350908501905b80841015610b0157845180516001600160a01b0316835286015186830152938501936001939093019290860190610acf565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550610b308187610a1e565b9a9950505050505050505050565b600060208284031215610b5057600080fd5b5051919050565b600060208284031215610b6957600080fd5b81518015158114610b7957600080fd5b9392505050565b6001600160a01b0385168152606060208201819052600090610ba590830185876109d9565b905082604083015295945050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220775efb93abc4c76bac76677f988d417a42f1d98f4736817071073415a8c0eee864736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 218,
        "contract": "contracts/SenderWithMsg.sol:SenderWithMsg",
        "label": "router",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IRouterClient)51"
      },
      {
        "astId": 221,
        "contract": "contracts/SenderWithMsg.sol:SenderWithMsg",
        "label": "linkToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)185"
      }
    ],
    "types": {
      "t_contract(IERC20)185": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IRouterClient)51": {
        "encoding": "inplace",
        "label": "contract IRouterClient",
        "numberOfBytes": "20"
      }
    }
  }
}